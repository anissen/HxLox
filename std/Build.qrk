module Std.Build for Project, Target, project

import Std.Core for System, Reflect

enum Target {
  Js
  Php
  Interpret
}

class Project {
  
  static run(p) {
    if (p.settings.sub.length > 0) {
      p.settings.sub.forEach { Project.run(it) }
      return
    }
    
    if (p.settings.target == Target.Js) { 
      this.buildJS(p.settings)
    } else {
      this.interpret(p.settings)
    }
  }

  foreign static buildJs(settings)

  foreign static buildPhp(settings)

  foreign static interpret(settings)

  construct new(settings) {
    this.settings = settings
  }

  construct default() {
    this.settings = {
      root: System.getCwd(),
      target: Target.Interpret,
      src: 'src',
      main: null
      targets: []
    }
  }

  name = value {
    this.settings.name = value
  }

  src = value {
    this.settings.src = value
  }

  dst = value {
    this.settings.dst = value
  }

  target = value {
    this.settings.target = value
  }

  /// Add a sub-target
  sub(cb) {
    var p = Project.new(this.settings)
    cb(p)
    this.settings.targets.push(p)
  }

}

fun project(cb) {
  var p = Project.default()
  cb(p)
  Project.run(p)
}
