module Std.Template for html, safe

var entityMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
  '/': '&#x2F;',
  '`': '&#x60;',
  '=': '&#x3D;'
}

fun escape(value) {
  if (!value) {
    return ''
  }
  if (Std.is(value, Array)) {
    return value.map(escape).join('')
  }
  if (Reflect.hasMethod(value, 'render')) {
    value = value.render()
  }
  if (value.__html) {
    return Std.string(value.__html())
  }
  return Std.string(value).replace(RegEx('[&<>"'`=\/]', 'g'), { entityMap[it] })
}

fun safe(value) {
  return {
    toString: { value },
    __html: { value }
  }
}

fun html(parts, placeholders) {
  return safe(parts.reduce({| result, part, i | 
    return result + escape(placeholders[i - 1]) + part
  }))
}
