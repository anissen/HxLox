package quirk.generator;

import quirk.Stmt;

class JsTarget extends BaseTarget {

  override public function generate(name:String, stmts:Array<Stmt>) {
    return new JsGenerator(this, name).generate(stmts);
  }

  override public function write():Void {
    addBuiltinModule('js:prelude', '_prelude');
    addBuiltinModule('js:primitives', '_primitives');
    addModule(main);
    writeModules();
  }
  
  private function writeModules() {
    var output:Array<String> = [];
    output.push('// Generated by Quirk');
    output.push(modules.get('_prelude').generated);
    output.push(modules.get('_primitives').generated);
    modules.remove('_prelude');
    modules.remove('_primitives');
    for (name in modules.keys()) {
      var entry = modules.get(name);
      var deps = entry.deps;
      var body = entry.generated;
      output.push('__quirk.env.define("' + name + '", ['
        + deps.map(function (d) return '"$d"').join(',') + '], function (require, module, exports) {\n'
        + body + '\n});');
    }
    output.push('__quirk.env.main("' + main + '");');
    writer.writeToRoot('!(function (global, undefined) {\n'
      + output.join('\n') + '\n})(typeof global != "undefined" ? global : window);', 'js');
  }

}
